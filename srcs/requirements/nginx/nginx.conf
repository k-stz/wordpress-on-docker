# directives are key value pair, like this one here specifying the
# error_log location
#error_log /var/log/nginx/error.log;
user root root;

# Followed by braces a directive is known as a `context`, which can hold
# more directives
events {}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    sendfile        on;

    # include /etc/nginx/sites-available/*.conf;
    # This area is called the context of the directive
    server {
        server_name k-stz.de;
        listen 443 ssl;
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        # We can use TLSv1.3 because we use OpenSSL 1.1.1+ and nginx 1.13+
        # Now we enable it:
        ssl_protocols TLSv1.2 TLSv1.3;
        # TLS/SSL self-signed public certificate distributed to clients
        ssl_certificate /etc/ssl/certs/k-stz.de.crt;
        # TLS/SSL private key used for encryption
        ssl_certificate_key /etc/ssl/private/nginx-private.key;

        # Tell the server where to find the raw files
        # location / {
        #     root /var/www/html/index.php;
        # }

        root /var/www/html;
        # root /app/www;
        index index.php;  # withouth this: forbidden 403 error
        # index index.html;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ /index.php?$args;
        }

        # pass the PHP scripts to FastCGI server listening on wordpress:9000
        location ~ \.php$ {
            try_files $uri $uri/ /index.php?$args;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass wordpress:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        }

    }

    server {
        server_name k-stz.de;
        listen 7000 ssl;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_certificate /etc/ssl/certs/k-stz.de.crt;
        ssl_certificate_key /etc/ssl/private/nginx-private.key;
        error_log /var/log/nginx/error.log;

        # ROOT IS THE PATH ON THE TARGET SERVER = ADMINER:6000!!!! 
        # WE MOUNT THE ADMINER DATA IN /var/www/adminer BUT THE REQUEST TO PHP-FPM
        # WILL LOOK FOR IT IN @adminer:6000:<root>, so @adminer:6000:/usr/share/adminer
        root /usr/share/adminer/adminer;
        index index index.php index.html index.htm index.nginx-debian.html;

        location / {
            try_files $uri /index.php?$args;
        }
        location ~* \.php$ {
            #try_files $uri =404;
            include fastcgi_params;
            # fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass adminer:6000;
            fastcgi_param  HTTPS on;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            # fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        }
    }
}
